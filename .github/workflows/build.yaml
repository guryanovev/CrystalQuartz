name: dotnet package

on: [push]

jobs:
  build:

    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: | 
            2.0.x
            2.1.x
            7.x
      - name: Download 461 targeting pack
        uses: suisei-cn/actions-download-file@818d6b7dc8fe73f2f924b6241f2b1134ca1377d9 # 1.6.0
        id: downloadfile  # Remember to give an ID if you need the output filename
        with:
            url: "https://download.microsoft.com/download/F/1/D/F1DEB8DB-D277-4EF9-9F48-3A65D4D8F965/NDP461-DevPack-KB3105179-ENU.exe"
            target: public/
      - name: Install targeting pack
        shell: cmd
        working-directory: public
        run: NDP461-DevPack-KB3105179-ENU.exe /q
      - name: Setup NodeJS
        uses: actions/setup-node@v3
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
        with:
          node-version: 18.x
      - name: Install extra NuGet packages
        run: nuget install ILRepack -OutputDirectory src/packages
      - name: CI Build
        working-directory: ./src
        run: |
            dotnet build CrystalQuartz.Build/CrystalQuartz.Build.csproj --configuration=Debug
            dotnet "../tools/Rosalia/Rosalia.dll" /task=CiBuild CrystalQuartz.Build/bin/Debug/netstandard2.0/CrystalQuartz.Build.dll
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: Artifacts/gh-pages

  deploy:
    needs: build

    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or the latest "vX.X.X" version tag for this action
